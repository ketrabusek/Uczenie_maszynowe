{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOyGkZUd7y8CHtXcIhFdcmL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ketrabusek/Uczenie_maszynowe/blob/use_case1/Zadanie1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VUmS3KkRVuDs",
        "outputId": "dd22fbfe-50f3-45d6-d879-06e1135380f9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Unnamed: 0  Index                                     Address  FLAG  \\\n",
            "0           0      1  0x00009277775ac7d0d59eaad8fee3d10ac6c805e8     0   \n",
            "1           1      2  0x0002b44ddb1476db43c868bd494422ee4c136fed     0   \n",
            "2           2      3  0x0002bda54cb772d040f779e88eb453cac0daa244     0   \n",
            "3           3      4  0x00038e6ba2fd5c09aedb96697c8d7b8fa6632e5e     0   \n",
            "4           4      5  0x00062d1dd1afb6fb02540ddad9cdebfe568e0d89     0   \n",
            "\n",
            "   Avg min between sent tnx  Avg min between received tnx  \\\n",
            "0                    844.26                       1093.71   \n",
            "1                  12709.07                       2958.44   \n",
            "2                 246194.54                       2434.02   \n",
            "3                  10219.60                      15785.09   \n",
            "4                     36.61                      10707.77   \n",
            "\n",
            "   Time Diff between first and last (Mins)  Sent tnx  Received Tnx  \\\n",
            "0                                704785.63       721            89   \n",
            "1                               1218216.73        94             8   \n",
            "2                                516729.30         2            10   \n",
            "3                                397555.90        25             9   \n",
            "4                                382472.42      4598            20   \n",
            "\n",
            "   Number of Created Contracts  ...  ERC20 min val sent  ERC20 max val sent  \\\n",
            "0                            0  ...            0.000000        1.683100e+07   \n",
            "1                            0  ...            2.260809        2.260809e+00   \n",
            "2                            0  ...            0.000000        0.000000e+00   \n",
            "3                            0  ...          100.000000        9.029231e+03   \n",
            "4                            1  ...            0.000000        4.500000e+04   \n",
            "\n",
            "   ERC20 avg val sent  ERC20 min val sent contract  \\\n",
            "0       271779.920000                          0.0   \n",
            "1            2.260809                          0.0   \n",
            "2            0.000000                          0.0   \n",
            "3         3804.076893                          0.0   \n",
            "4        13726.659220                          0.0   \n",
            "\n",
            "   ERC20 max val sent contract  ERC20 avg val sent contract  \\\n",
            "0                          0.0                          0.0   \n",
            "1                          0.0                          0.0   \n",
            "2                          0.0                          0.0   \n",
            "3                          0.0                          0.0   \n",
            "4                          0.0                          0.0   \n",
            "\n",
            "   ERC20 uniq sent token name  ERC20 uniq rec token name  \\\n",
            "0                        39.0                       57.0   \n",
            "1                         1.0                        7.0   \n",
            "2                         0.0                        8.0   \n",
            "3                         1.0                       11.0   \n",
            "4                         6.0                       27.0   \n",
            "\n",
            "   ERC20 most sent token type  ERC20_most_rec_token_type  \n",
            "0                   Cofoundit                  Numeraire  \n",
            "1              Livepeer Token             Livepeer Token  \n",
            "2                        None                      XENON  \n",
            "3                      Raiden                      XENON  \n",
            "4               StatusNetwork                        EOS  \n",
            "\n",
            "[5 rows x 51 columns]\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Wczytanie danych z pliku CSV z nowym separatorem\n",
        "data = pd.read_csv('sample_data/case1.csv', sep=';')\n",
        "\n",
        "# Podgląd danych\n",
        "print(data.head())\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## Wyświetlenie liczby wierszy w danych\n",
        "print(\"Liczba wierszy w danych:\", len(data))\n",
        "\n",
        "# Sprawdzenie braków danych\n",
        "def sprawdz_braki_danych(data):\n",
        "    braki = data.isnull().sum()\n",
        "    if braki.sum() == 0:\n",
        "        print(\"Brak brakujących danych w zestawie.\")\n",
        "    else:\n",
        "        print(\"Liczba brakujących danych w poszczególnych kolumnach:\")\n",
        "        print(braki)\n",
        "\n",
        "# Wywołanie funkcji sprawdzającej braki danych\n",
        "sprawdz_braki_danych(data)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UiCtEG6y4N4y",
        "outputId": "c8e749de-67f2-4396-df6c-cd4933a38bb0"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Liczba wierszy w danych: 9841\n",
            "Liczba brakujących danych w poszczególnych kolumnach:\n",
            "Unnamed: 0                                                0\n",
            "Index                                                     0\n",
            "Address                                                   0\n",
            "FLAG                                                      0\n",
            "Avg min between sent tnx                                  0\n",
            "Avg min between received tnx                              0\n",
            "Time Diff between first and last (Mins)                   0\n",
            "Sent tnx                                                  0\n",
            "Received Tnx                                              0\n",
            "Number of Created Contracts                               0\n",
            "Unique Received From Addresses                            0\n",
            "Unique Sent To Addresses                                  0\n",
            "min value received                                        0\n",
            "max value received                                        0\n",
            "avg val received                                          0\n",
            "min val sent                                              0\n",
            "max val sent                                              0\n",
            "avg val sent                                              0\n",
            "min value sent to contract                                0\n",
            "max val sent to contract                                  0\n",
            "avg value sent to contract                                0\n",
            "total transactions (including tnx to create contract      0\n",
            "total Ether sent                                          0\n",
            "total ether received                                      0\n",
            "total ether sent contracts                                0\n",
            "total ether balance                                       0\n",
            "Total ERC20 tnxs                                        829\n",
            "ERC20 total Ether received                              829\n",
            "ERC20 total ether sent                                  829\n",
            "ERC20 total Ether sent contract                         829\n",
            "ERC20 uniq sent addr                                    829\n",
            "ERC20 uniq rec addr                                     829\n",
            "ERC20 uniq sent addr.1                                  829\n",
            "ERC20 uniq rec contract addr                            829\n",
            "ERC20 avg time between sent tnx                         829\n",
            "ERC20 avg time between rec tnx                          829\n",
            "ERC20 avg time between rec 2 tnx                        829\n",
            "ERC20 avg time between contract tnx                     829\n",
            "ERC20 min val rec                                       829\n",
            "ERC20 max val rec                                       829\n",
            "ERC20 avg val rec                                       829\n",
            "ERC20 min val sent                                      829\n",
            "ERC20 max val sent                                      829\n",
            "ERC20 avg val sent                                      829\n",
            "ERC20 min val sent contract                             829\n",
            "ERC20 max val sent contract                             829\n",
            "ERC20 avg val sent contract                             829\n",
            "ERC20 uniq sent token name                              829\n",
            "ERC20 uniq rec token name                               829\n",
            "ERC20 most sent token type                              841\n",
            "ERC20_most_rec_token_type                               851\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Usunięcie kolumn 'ERC20 most sent token type' i 'ERC20_most_rec_token_type'\n",
        "data.drop(columns=['ERC20 most sent token type', 'ERC20_most_rec_token_type'], inplace=True)\n",
        "\n",
        "# Usunięcie wierszy zawierających brakujące dane\n",
        "data.dropna(inplace=True)\n",
        "\n",
        "# Ponowne sprawdzenie braków danych\n",
        "sprawdz_braki_danych(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x94VV_wUdMgB",
        "outputId": "11b9acac-4b00-444e-d119-49442140d852"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Brak brakujących danych w zestawie.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "eACIm1Z0upRJ",
        "outputId": "6fa7ea4c-ce46-4da2-acb5-335e159175c4"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Unnamed: 0  Index                                     Address  FLAG  \\\n",
              "0              0      1  0x00009277775ac7d0d59eaad8fee3d10ac6c805e8     0   \n",
              "1              1      2  0x0002b44ddb1476db43c868bd494422ee4c136fed     0   \n",
              "2              2      3  0x0002bda54cb772d040f779e88eb453cac0daa244     0   \n",
              "3              3      4  0x00038e6ba2fd5c09aedb96697c8d7b8fa6632e5e     0   \n",
              "4              4      5  0x00062d1dd1afb6fb02540ddad9cdebfe568e0d89     0   \n",
              "...          ...    ...                                         ...   ...   \n",
              "9832        9832   2171  0xfea28ca175a80f5a348016583961f63be8605f80     1   \n",
              "9836        9836   2175  0xff481ca14e6c16b79fc8ab299b4d2387ec8ecdd2     1   \n",
              "9837        9837   2176  0xff718805bb9199ebf024ab6acd333e603ad77c85     1   \n",
              "9838        9838   2177  0xff8e6af02d41a576a0c82f7835535193e1a6bccc     1   \n",
              "9840        9840   2179  0xd624d046edbdef805c5e4140dce5fb5ec1b39a3c     1   \n",
              "\n",
              "      Avg min between sent tnx  Avg min between received tnx  \\\n",
              "0                       844.26                       1093.71   \n",
              "1                     12709.07                       2958.44   \n",
              "2                    246194.54                       2434.02   \n",
              "3                     10219.60                      15785.09   \n",
              "4                        36.61                      10707.77   \n",
              "...                        ...                           ...   \n",
              "9832                      0.00                          0.00   \n",
              "9836                  12635.10                        631.39   \n",
              "9837                      0.00                          0.00   \n",
              "9838                   2499.44                       2189.29   \n",
              "9840                  37242.70                        149.56   \n",
              "\n",
              "      Time Diff between first and last (Mins)  Sent tnx  Received Tnx  \\\n",
              "0                                   704785.63       721            89   \n",
              "1                                  1218216.73        94             8   \n",
              "2                                   516729.30         2            10   \n",
              "3                                   397555.90        25             9   \n",
              "4                                   382472.42      4598            20   \n",
              "...                                       ...       ...           ...   \n",
              "9832                                     0.00         0             0   \n",
              "9836                                 58748.48         4            13   \n",
              "9837                                     0.00         0             0   \n",
              "9838                                261601.88        67            43   \n",
              "9840                                670817.33        18             3   \n",
              "\n",
              "      Number of Created Contracts  ...  ERC20 max val rec  ERC20 avg val rec  \\\n",
              "0                               0  ...       1.500000e+07      265586.147600   \n",
              "1                               0  ...       3.650000e+02          57.632615   \n",
              "2                               0  ...       4.428198e+02          65.189009   \n",
              "3                               0  ...       1.141223e+04        1555.550174   \n",
              "4                               1  ...       9.000000e+04        4934.232147   \n",
              "...                           ...  ...                ...                ...   \n",
              "9832                            0  ...       1.337000e+01           6.685000   \n",
              "9836                            0  ...       1.337000e+00           0.668500   \n",
              "9837                            0  ...       1.337000e+01          13.370000   \n",
              "9838                            0  ...       1.500000e+03         300.693901   \n",
              "9840                            0  ...       2.018061e+04        1365.244359   \n",
              "\n",
              "      ERC20 min val sent  ERC20 max val sent  ERC20 avg val sent  \\\n",
              "0               0.000000        1.683100e+07       271779.920000   \n",
              "1               2.260809        2.260809e+00            2.260809   \n",
              "2               0.000000        0.000000e+00            0.000000   \n",
              "3             100.000000        9.029231e+03         3804.076893   \n",
              "4               0.000000        4.500000e+04        13726.659220   \n",
              "...                  ...                 ...                 ...   \n",
              "9832            0.000000        0.000000e+00            0.000000   \n",
              "9836            0.000000        0.000000e+00            0.000000   \n",
              "9837            0.000000        0.000000e+00            0.000000   \n",
              "9838            0.000000        0.000000e+00            0.000000   \n",
              "9840            0.000000        0.000000e+00            0.000000   \n",
              "\n",
              "      ERC20 min val sent contract  ERC20 max val sent contract  \\\n",
              "0                             0.0                          0.0   \n",
              "1                             0.0                          0.0   \n",
              "2                             0.0                          0.0   \n",
              "3                             0.0                          0.0   \n",
              "4                             0.0                          0.0   \n",
              "...                           ...                          ...   \n",
              "9832                          0.0                          0.0   \n",
              "9836                          0.0                          0.0   \n",
              "9837                          0.0                          0.0   \n",
              "9838                          0.0                          0.0   \n",
              "9840                          0.0                          0.0   \n",
              "\n",
              "      ERC20 avg val sent contract  ERC20 uniq sent token name  \\\n",
              "0                             0.0                        39.0   \n",
              "1                             0.0                         1.0   \n",
              "2                             0.0                         0.0   \n",
              "3                             0.0                         1.0   \n",
              "4                             0.0                         6.0   \n",
              "...                           ...                         ...   \n",
              "9832                          0.0                         0.0   \n",
              "9836                          0.0                         0.0   \n",
              "9837                          0.0                         0.0   \n",
              "9838                          0.0                         0.0   \n",
              "9840                          0.0                         0.0   \n",
              "\n",
              "      ERC20 uniq rec token name  \n",
              "0                          57.0  \n",
              "1                           7.0  \n",
              "2                           8.0  \n",
              "3                          11.0  \n",
              "4                          27.0  \n",
              "...                         ...  \n",
              "9832                        2.0  \n",
              "9836                        2.0  \n",
              "9837                        1.0  \n",
              "9838                        5.0  \n",
              "9840                       42.0  \n",
              "\n",
              "[9012 rows x 49 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-33c89759-52db-4634-89ad-dc1cdde4a8bf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Index</th>\n",
              "      <th>Address</th>\n",
              "      <th>FLAG</th>\n",
              "      <th>Avg min between sent tnx</th>\n",
              "      <th>Avg min between received tnx</th>\n",
              "      <th>Time Diff between first and last (Mins)</th>\n",
              "      <th>Sent tnx</th>\n",
              "      <th>Received Tnx</th>\n",
              "      <th>Number of Created Contracts</th>\n",
              "      <th>...</th>\n",
              "      <th>ERC20 max val rec</th>\n",
              "      <th>ERC20 avg val rec</th>\n",
              "      <th>ERC20 min val sent</th>\n",
              "      <th>ERC20 max val sent</th>\n",
              "      <th>ERC20 avg val sent</th>\n",
              "      <th>ERC20 min val sent contract</th>\n",
              "      <th>ERC20 max val sent contract</th>\n",
              "      <th>ERC20 avg val sent contract</th>\n",
              "      <th>ERC20 uniq sent token name</th>\n",
              "      <th>ERC20 uniq rec token name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0x00009277775ac7d0d59eaad8fee3d10ac6c805e8</td>\n",
              "      <td>0</td>\n",
              "      <td>844.26</td>\n",
              "      <td>1093.71</td>\n",
              "      <td>704785.63</td>\n",
              "      <td>721</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.500000e+07</td>\n",
              "      <td>265586.147600</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.683100e+07</td>\n",
              "      <td>271779.920000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>57.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0x0002b44ddb1476db43c868bd494422ee4c136fed</td>\n",
              "      <td>0</td>\n",
              "      <td>12709.07</td>\n",
              "      <td>2958.44</td>\n",
              "      <td>1218216.73</td>\n",
              "      <td>94</td>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>3.650000e+02</td>\n",
              "      <td>57.632615</td>\n",
              "      <td>2.260809</td>\n",
              "      <td>2.260809e+00</td>\n",
              "      <td>2.260809</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0x0002bda54cb772d040f779e88eb453cac0daa244</td>\n",
              "      <td>0</td>\n",
              "      <td>246194.54</td>\n",
              "      <td>2434.02</td>\n",
              "      <td>516729.30</td>\n",
              "      <td>2</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>4.428198e+02</td>\n",
              "      <td>65.189009</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>0x00038e6ba2fd5c09aedb96697c8d7b8fa6632e5e</td>\n",
              "      <td>0</td>\n",
              "      <td>10219.60</td>\n",
              "      <td>15785.09</td>\n",
              "      <td>397555.90</td>\n",
              "      <td>25</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.141223e+04</td>\n",
              "      <td>1555.550174</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>9.029231e+03</td>\n",
              "      <td>3804.076893</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>0x00062d1dd1afb6fb02540ddad9cdebfe568e0d89</td>\n",
              "      <td>0</td>\n",
              "      <td>36.61</td>\n",
              "      <td>10707.77</td>\n",
              "      <td>382472.42</td>\n",
              "      <td>4598</td>\n",
              "      <td>20</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>9.000000e+04</td>\n",
              "      <td>4934.232147</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.500000e+04</td>\n",
              "      <td>13726.659220</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>27.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9832</th>\n",
              "      <td>9832</td>\n",
              "      <td>2171</td>\n",
              "      <td>0xfea28ca175a80f5a348016583961f63be8605f80</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.337000e+01</td>\n",
              "      <td>6.685000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9836</th>\n",
              "      <td>9836</td>\n",
              "      <td>2175</td>\n",
              "      <td>0xff481ca14e6c16b79fc8ab299b4d2387ec8ecdd2</td>\n",
              "      <td>1</td>\n",
              "      <td>12635.10</td>\n",
              "      <td>631.39</td>\n",
              "      <td>58748.48</td>\n",
              "      <td>4</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.337000e+00</td>\n",
              "      <td>0.668500</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9837</th>\n",
              "      <td>9837</td>\n",
              "      <td>2176</td>\n",
              "      <td>0xff718805bb9199ebf024ab6acd333e603ad77c85</td>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.337000e+01</td>\n",
              "      <td>13.370000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9838</th>\n",
              "      <td>9838</td>\n",
              "      <td>2177</td>\n",
              "      <td>0xff8e6af02d41a576a0c82f7835535193e1a6bccc</td>\n",
              "      <td>1</td>\n",
              "      <td>2499.44</td>\n",
              "      <td>2189.29</td>\n",
              "      <td>261601.88</td>\n",
              "      <td>67</td>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.500000e+03</td>\n",
              "      <td>300.693901</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9840</th>\n",
              "      <td>9840</td>\n",
              "      <td>2179</td>\n",
              "      <td>0xd624d046edbdef805c5e4140dce5fb5ec1b39a3c</td>\n",
              "      <td>1</td>\n",
              "      <td>37242.70</td>\n",
              "      <td>149.56</td>\n",
              "      <td>670817.33</td>\n",
              "      <td>18</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>2.018061e+04</td>\n",
              "      <td>1365.244359</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>42.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9012 rows × 49 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33c89759-52db-4634-89ad-dc1cdde4a8bf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-33c89759-52db-4634-89ad-dc1cdde4a8bf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-33c89759-52db-4634-89ad-dc1cdde4a8bf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dece858d-f92f-4678-be10-6c6d3033c81f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dece858d-f92f-4678-be10-6c6d3033c81f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dece858d-f92f-4678-be10-6c6d3033c81f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "data.drop(\"Unnamed: 0\", axis=1, inplace=True)\n",
        "data.drop(\"Address\", axis=1, inplace=True)\n",
        "data.drop(\"Index\", axis=1, inplace=True)\n",
        "\n",
        "\n",
        "# Stworzenie obiektu standaryzatora\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Wybór kolumn do standaryzacji (bez kolumny 'FLAG')\n",
        "columns_to_scale = data.columns[3:]\n",
        "\n",
        "# Standaryzacja wybranych kolumn\n",
        "data[columns_to_scale] = scaler.fit_transform(data[columns_to_scale])\n",
        "\n",
        "# Wyświetlenie pierwszych kilku wierszy danych po standaryzacji\n",
        "\n",
        "print(data.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eV1XOsKgVwzi",
        "outputId": "ff4e96be-b91d-4d5f-cf80-3e3dfd035eeb"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   FLAG  Avg min between sent tnx  Avg min between received tnx  \\\n",
            "0     0                    844.26                       1093.71   \n",
            "1     0                  12709.07                       2958.44   \n",
            "2     0                 246194.54                       2434.02   \n",
            "3     0                  10219.60                      15785.09   \n",
            "4     0                     36.61                      10707.77   \n",
            "\n",
            "   Time Diff between first and last (Mins)  Sent tnx  Received Tnx  \\\n",
            "0                                 1.416878  0.752165     -0.090503   \n",
            "1                                 2.965941 -0.041091     -0.173044   \n",
            "2                                 0.849497 -0.157486     -0.171006   \n",
            "3                                 0.489941 -0.128388     -0.172025   \n",
            "4                                 0.444433  5.657198     -0.160816   \n",
            "\n",
            "   Number of Created Contracts  Unique Received From Addresses  \\\n",
            "0                    -0.027442                        0.023475   \n",
            "1                    -0.027442                       -0.088739   \n",
            "2                    -0.027442                       -0.072709   \n",
            "3                    -0.027442                       -0.082327   \n",
            "4                    -0.020676                       -0.082327   \n",
            "\n",
            "   Unique Sent To Addresses  min value received  ...  ERC20 max val rec  \\\n",
            "0                  0.326144           -0.140651  ...          -0.010464   \n",
            "1                 -0.051268           -0.140651  ...          -0.011887   \n",
            "2                 -0.094816           -0.140315  ...          -0.011887   \n",
            "3                 -0.054897           -0.140651  ...          -0.011886   \n",
            "4                 -0.033123           -0.140651  ...          -0.011879   \n",
            "\n",
            "   ERC20 avg val rec  ERC20 min val sent  ERC20 max val sent  \\\n",
            "0          -0.019059           -0.011145            0.003217   \n",
            "1          -0.020299           -0.011143           -0.011049   \n",
            "2          -0.020299           -0.011145           -0.011049   \n",
            "3          -0.020292           -0.011050           -0.011041   \n",
            "4          -0.020276           -0.011145           -0.011011   \n",
            "\n",
            "   ERC20 avg val sent  ERC20 min val sent contract  \\\n",
            "0           -0.010223                          0.0   \n",
            "1           -0.010683                          0.0   \n",
            "2           -0.010683                          0.0   \n",
            "3           -0.010677                          0.0   \n",
            "4           -0.010660                          0.0   \n",
            "\n",
            "   ERC20 max val sent contract  ERC20 avg val sent contract  \\\n",
            "0                          0.0                          0.0   \n",
            "1                          0.0                          0.0   \n",
            "2                          0.0                          0.0   \n",
            "3                          0.0                          0.0   \n",
            "4                          0.0                          0.0   \n",
            "\n",
            "   ERC20 uniq sent token name  ERC20 uniq rec token name  \n",
            "0                    5.585223                   3.128332  \n",
            "1                   -0.057156                   0.130313  \n",
            "2                   -0.205640                   0.190274  \n",
            "3                   -0.057156                   0.370155  \n",
            "4                    0.685262                   1.329521  \n",
            "\n",
            "[5 rows x 46 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.decomposition import PCA\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Tworzymy obiekt PCA\n",
        "pca = PCA()\n",
        "\n",
        "# Dopasowanie PCA do danych\n",
        "pca.fit(data[columns_to_scale])\n",
        "\n",
        "# Rysowanie wykresu wariancji wyjaśnionej przez kolejne komponenty główne\n",
        "plt.plot(range(1, len(pca.explained_variance_ratio_) + 1), pca.explained_variance_ratio_, marker='o', linestyle='-')\n",
        "plt.title('Wykres wariancji wyjaśnionej')\n",
        "plt.xlabel('Komponenty główne')\n",
        "plt.ylabel('Wariancja wyjaśniona')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "id": "ErR0ypiqgI7r",
        "outputId": "fed5d64e-6140-4cc9-d68b-e51eb9f76280"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Wyświetlenie wariancji wyjaśnionej przez każdy komponent główny\n",
        "explained_variance_ratios = pca.explained_variance_ratio_\n",
        "for i, ratio in enumerate(explained_variance_ratios, start=1):\n",
        "    print(f'Komponent główny {i}: Wariancja wyjaśniona: {ratio:.4f}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FeXWhAWdguV3",
        "outputId": "83678d6b-991b-4bab-b6cb-a33b87367681"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Komponent główny 1: Wariancja wyjaśniona: 0.1286\n",
            "Komponent główny 2: Wariancja wyjaśniona: 0.1111\n",
            "Komponent główny 3: Wariancja wyjaśniona: 0.0914\n",
            "Komponent główny 4: Wariancja wyjaśniona: 0.0783\n",
            "Komponent główny 5: Wariancja wyjaśniona: 0.0715\n",
            "Komponent główny 6: Wariancja wyjaśniona: 0.0601\n",
            "Komponent główny 7: Wariancja wyjaśniona: 0.0565\n",
            "Komponent główny 8: Wariancja wyjaśniona: 0.0472\n",
            "Komponent główny 9: Wariancja wyjaśniona: 0.0435\n",
            "Komponent główny 10: Wariancja wyjaśniona: 0.0399\n",
            "Komponent główny 11: Wariancja wyjaśniona: 0.0351\n",
            "Komponent główny 12: Wariancja wyjaśniona: 0.0278\n",
            "Komponent główny 13: Wariancja wyjaśniona: 0.0278\n",
            "Komponent główny 14: Wariancja wyjaśniona: 0.0253\n",
            "Komponent główny 15: Wariancja wyjaśniona: 0.0237\n",
            "Komponent główny 16: Wariancja wyjaśniona: 0.0226\n",
            "Komponent główny 17: Wariancja wyjaśniona: 0.0195\n",
            "Komponent główny 18: Wariancja wyjaśniona: 0.0183\n",
            "Komponent główny 19: Wariancja wyjaśniona: 0.0133\n",
            "Komponent główny 20: Wariancja wyjaśniona: 0.0111\n",
            "Komponent główny 21: Wariancja wyjaśniona: 0.0104\n",
            "Komponent główny 22: Wariancja wyjaśniona: 0.0093\n",
            "Komponent główny 23: Wariancja wyjaśniona: 0.0064\n",
            "Komponent główny 24: Wariancja wyjaśniona: 0.0063\n",
            "Komponent główny 25: Wariancja wyjaśniona: 0.0057\n",
            "Komponent główny 26: Wariancja wyjaśniona: 0.0051\n",
            "Komponent główny 27: Wariancja wyjaśniona: 0.0042\n",
            "Komponent główny 28: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 29: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 30: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 31: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 32: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 33: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 34: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 35: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 36: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 37: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 38: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 39: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 40: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 41: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 42: Wariancja wyjaśniona: 0.0000\n",
            "Komponent główny 43: Wariancja wyjaśniona: 0.0000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "# Obliczanie kumulatywnej wariancji wyjaśnionej\n",
        "cumulative_variance_ratio = np.cumsum(explained_variance_ratios)\n",
        "\n",
        "# Wybór liczby komponentów, które wyjaśniają co najmniej 80% wariancji\n",
        "n_components_80 = np.argmax(cumulative_variance_ratio >= 0.80) + 1\n",
        "explained_variance_80 = cumulative_variance_ratio[n_components_80 - 1]\n",
        "\n",
        "# Wybór liczby komponentów, które wyjaśniają co najmniej 90% wariancji\n",
        "n_components_90 = np.argmax(cumulative_variance_ratio >= 0.90) + 1\n",
        "explained_variance_90 = cumulative_variance_ratio[n_components_90 - 1]\n",
        "\n",
        "print(f'Liczba komponentów wyjaśniających co najmniej 80% wariancji: {n_components_80}')\n",
        "print(f'Kumulatywna wariancja wyjaśniona przez {n_components_80} komponentów: {explained_variance_80:.4f}')\n",
        "print(f'Liczba komponentów wyjaśniających co najmniej 90% wariancji: {n_components_90}')\n",
        "print(f'Kumulatywna wariancja wyjaśniona przez {n_components_90} komponentów: {explained_variance_90:.4f}')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Wvwf8tKDhBIr",
        "outputId": "2f1c6e6a-efea-413b-bce7-90460c9552f7"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Liczba komponentów wyjaśniających co najmniej 80% wariancji: 13\n",
            "Kumulatywna wariancja wyjaśniona przez 13 komponentów: 0.8189\n",
            "Liczba komponentów wyjaśniających co najmniej 90% wariancji: 17\n",
            "Kumulatywna wariancja wyjaśniona przez 17 komponentów: 0.9100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Wykluczenie kolumn zawierających wartości tekstowe\n",
        "data_numeric = data.select_dtypes(include=['number'])\n",
        "\n",
        "# Inicjalizacja obiektu StandardScaler\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Dopasowanie scaler do danych (bez kolumn zawierających wartości tekstowe) i przekształcenie ich\n",
        "data_scaled = scaler.fit_transform(data_numeric)\n",
        "\n",
        "# Utworzenie obiektu PCA z 14 komponentami\n",
        "pca_80 = PCA(n_components=14)\n",
        "# Dopasowanie modelu do przeskalowanych danych\n",
        "pca_80.fit(data_scaled)\n",
        "\n",
        "# Przekształcenie danych przy użyciu PCA\n",
        "data_pca_80 = pca_80.transform(data_scaled)\n",
        "\n",
        "# Utworzenie obiektu PCA z 19 komponentami\n",
        "pca_90 = PCA(n_components=19)\n",
        "# Dopasowanie modelu do przeskalowanych danych\n",
        "pca_90.fit(data_scaled)\n",
        "\n",
        "# Przekształcenie danych przy użyciu PCA\n",
        "data_pca_90 = pca_90.transform(data_scaled)\n"
      ],
      "metadata": {
        "id": "6HsKzHSjhYyO"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "3VyerfkBm_o2",
        "outputId": "d70a40ff-7636-4add-b54d-1f359e03fc44"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      FLAG  Avg min between sent tnx  Avg min between received tnx  \\\n",
              "0        0                    844.26                       1093.71   \n",
              "1        0                  12709.07                       2958.44   \n",
              "2        0                 246194.54                       2434.02   \n",
              "3        0                  10219.60                      15785.09   \n",
              "4        0                     36.61                      10707.77   \n",
              "...    ...                       ...                           ...   \n",
              "9832     1                      0.00                          0.00   \n",
              "9836     1                  12635.10                        631.39   \n",
              "9837     1                      0.00                          0.00   \n",
              "9838     1                   2499.44                       2189.29   \n",
              "9840     1                  37242.70                        149.56   \n",
              "\n",
              "      Time Diff between first and last (Mins)  Sent tnx  Received Tnx  \\\n",
              "0                                    1.416878  0.752165     -0.090503   \n",
              "1                                    2.965941 -0.041091     -0.173044   \n",
              "2                                    0.849497 -0.157486     -0.171006   \n",
              "3                                    0.489941 -0.128388     -0.172025   \n",
              "4                                    0.444433  5.657198     -0.160816   \n",
              "...                                       ...       ...           ...   \n",
              "9832                                -0.709517 -0.160017     -0.181196   \n",
              "9836                                -0.532268 -0.154956     -0.167949   \n",
              "9837                                -0.709517 -0.160017     -0.181196   \n",
              "9838                                 0.079757 -0.075251     -0.137378   \n",
              "9840                                 1.314393 -0.137244     -0.178139   \n",
              "\n",
              "      Number of Created Contracts  Unique Received From Addresses  \\\n",
              "0                       -0.027442                        0.023475   \n",
              "1                       -0.027442                       -0.088739   \n",
              "2                       -0.027442                       -0.072709   \n",
              "3                       -0.027442                       -0.082327   \n",
              "4                       -0.020676                       -0.082327   \n",
              "...                           ...                             ...   \n",
              "9832                    -0.027442                       -0.104770   \n",
              "9836                    -0.027442                       -0.069502   \n",
              "9837                    -0.027442                       -0.104770   \n",
              "9838                    -0.027442                       -0.005380   \n",
              "9840                    -0.027442                       -0.101564   \n",
              "\n",
              "      Unique Sent To Addresses  min value received  ...  ERC20 max val rec  \\\n",
              "0                     0.326144           -0.140651  ...          -0.010464   \n",
              "1                    -0.051268           -0.140651  ...          -0.011887   \n",
              "2                    -0.094816           -0.140315  ...          -0.011887   \n",
              "3                    -0.054897           -0.140651  ...          -0.011886   \n",
              "4                    -0.033123           -0.140651  ...          -0.011879   \n",
              "...                        ...                 ...  ...                ...   \n",
              "9832                 -0.102074           -0.140651  ...          -0.011887   \n",
              "9836                 -0.087558           -0.140639  ...          -0.011887   \n",
              "9837                 -0.102074           -0.140651  ...          -0.011887   \n",
              "9838                  0.057601           -0.140648  ...          -0.011887   \n",
              "9840                 -0.083929           -0.138286  ...          -0.011885   \n",
              "\n",
              "      ERC20 avg val rec  ERC20 min val sent  ERC20 max val sent  \\\n",
              "0             -0.019059           -0.011145            0.003217   \n",
              "1             -0.020299           -0.011143           -0.011049   \n",
              "2             -0.020299           -0.011145           -0.011049   \n",
              "3             -0.020292           -0.011050           -0.011041   \n",
              "4             -0.020276           -0.011145           -0.011011   \n",
              "...                 ...                 ...                 ...   \n",
              "9832          -0.020299           -0.011145           -0.011049   \n",
              "9836          -0.020299           -0.011145           -0.011049   \n",
              "9837          -0.020299           -0.011145           -0.011049   \n",
              "9838          -0.020298           -0.011145           -0.011049   \n",
              "9840          -0.020293           -0.011145           -0.011049   \n",
              "\n",
              "      ERC20 avg val sent  ERC20 min val sent contract  \\\n",
              "0              -0.010223                          0.0   \n",
              "1              -0.010683                          0.0   \n",
              "2              -0.010683                          0.0   \n",
              "3              -0.010677                          0.0   \n",
              "4              -0.010660                          0.0   \n",
              "...                  ...                          ...   \n",
              "9832           -0.010683                          0.0   \n",
              "9836           -0.010683                          0.0   \n",
              "9837           -0.010683                          0.0   \n",
              "9838           -0.010683                          0.0   \n",
              "9840           -0.010683                          0.0   \n",
              "\n",
              "      ERC20 max val sent contract  ERC20 avg val sent contract  \\\n",
              "0                             0.0                          0.0   \n",
              "1                             0.0                          0.0   \n",
              "2                             0.0                          0.0   \n",
              "3                             0.0                          0.0   \n",
              "4                             0.0                          0.0   \n",
              "...                           ...                          ...   \n",
              "9832                          0.0                          0.0   \n",
              "9836                          0.0                          0.0   \n",
              "9837                          0.0                          0.0   \n",
              "9838                          0.0                          0.0   \n",
              "9840                          0.0                          0.0   \n",
              "\n",
              "      ERC20 uniq sent token name  ERC20 uniq rec token name  \n",
              "0                       5.585223                   3.128332  \n",
              "1                      -0.057156                   0.130313  \n",
              "2                      -0.205640                   0.190274  \n",
              "3                      -0.057156                   0.370155  \n",
              "4                       0.685262                   1.329521  \n",
              "...                          ...                        ...  \n",
              "9832                   -0.205640                  -0.169489  \n",
              "9836                   -0.205640                  -0.169489  \n",
              "9837                   -0.205640                  -0.229449  \n",
              "9838                   -0.205640                   0.010393  \n",
              "9840                   -0.205640                   2.228926  \n",
              "\n",
              "[9012 rows x 46 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0d0f369e-4809-440f-892e-f5f776b8804f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FLAG</th>\n",
              "      <th>Avg min between sent tnx</th>\n",
              "      <th>Avg min between received tnx</th>\n",
              "      <th>Time Diff between first and last (Mins)</th>\n",
              "      <th>Sent tnx</th>\n",
              "      <th>Received Tnx</th>\n",
              "      <th>Number of Created Contracts</th>\n",
              "      <th>Unique Received From Addresses</th>\n",
              "      <th>Unique Sent To Addresses</th>\n",
              "      <th>min value received</th>\n",
              "      <th>...</th>\n",
              "      <th>ERC20 max val rec</th>\n",
              "      <th>ERC20 avg val rec</th>\n",
              "      <th>ERC20 min val sent</th>\n",
              "      <th>ERC20 max val sent</th>\n",
              "      <th>ERC20 avg val sent</th>\n",
              "      <th>ERC20 min val sent contract</th>\n",
              "      <th>ERC20 max val sent contract</th>\n",
              "      <th>ERC20 avg val sent contract</th>\n",
              "      <th>ERC20 uniq sent token name</th>\n",
              "      <th>ERC20 uniq rec token name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>844.26</td>\n",
              "      <td>1093.71</td>\n",
              "      <td>1.416878</td>\n",
              "      <td>0.752165</td>\n",
              "      <td>-0.090503</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>0.023475</td>\n",
              "      <td>0.326144</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010464</td>\n",
              "      <td>-0.019059</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>0.003217</td>\n",
              "      <td>-0.010223</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.585223</td>\n",
              "      <td>3.128332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>12709.07</td>\n",
              "      <td>2958.44</td>\n",
              "      <td>2.965941</td>\n",
              "      <td>-0.041091</td>\n",
              "      <td>-0.173044</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.088739</td>\n",
              "      <td>-0.051268</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011143</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.057156</td>\n",
              "      <td>0.130313</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>246194.54</td>\n",
              "      <td>2434.02</td>\n",
              "      <td>0.849497</td>\n",
              "      <td>-0.157486</td>\n",
              "      <td>-0.171006</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.072709</td>\n",
              "      <td>-0.094816</td>\n",
              "      <td>-0.140315</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>0.190274</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>10219.60</td>\n",
              "      <td>15785.09</td>\n",
              "      <td>0.489941</td>\n",
              "      <td>-0.128388</td>\n",
              "      <td>-0.172025</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.082327</td>\n",
              "      <td>-0.054897</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011886</td>\n",
              "      <td>-0.020292</td>\n",
              "      <td>-0.011050</td>\n",
              "      <td>-0.011041</td>\n",
              "      <td>-0.010677</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.057156</td>\n",
              "      <td>0.370155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>36.61</td>\n",
              "      <td>10707.77</td>\n",
              "      <td>0.444433</td>\n",
              "      <td>5.657198</td>\n",
              "      <td>-0.160816</td>\n",
              "      <td>-0.020676</td>\n",
              "      <td>-0.082327</td>\n",
              "      <td>-0.033123</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011879</td>\n",
              "      <td>-0.020276</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011011</td>\n",
              "      <td>-0.010660</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.685262</td>\n",
              "      <td>1.329521</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9832</th>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.709517</td>\n",
              "      <td>-0.160017</td>\n",
              "      <td>-0.181196</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.104770</td>\n",
              "      <td>-0.102074</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>-0.169489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9836</th>\n",
              "      <td>1</td>\n",
              "      <td>12635.10</td>\n",
              "      <td>631.39</td>\n",
              "      <td>-0.532268</td>\n",
              "      <td>-0.154956</td>\n",
              "      <td>-0.167949</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.069502</td>\n",
              "      <td>-0.087558</td>\n",
              "      <td>-0.140639</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>-0.169489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9837</th>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.709517</td>\n",
              "      <td>-0.160017</td>\n",
              "      <td>-0.181196</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.104770</td>\n",
              "      <td>-0.102074</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>-0.229449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9838</th>\n",
              "      <td>1</td>\n",
              "      <td>2499.44</td>\n",
              "      <td>2189.29</td>\n",
              "      <td>0.079757</td>\n",
              "      <td>-0.075251</td>\n",
              "      <td>-0.137378</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.005380</td>\n",
              "      <td>0.057601</td>\n",
              "      <td>-0.140648</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020298</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>0.010393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9840</th>\n",
              "      <td>1</td>\n",
              "      <td>37242.70</td>\n",
              "      <td>149.56</td>\n",
              "      <td>1.314393</td>\n",
              "      <td>-0.137244</td>\n",
              "      <td>-0.178139</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.101564</td>\n",
              "      <td>-0.083929</td>\n",
              "      <td>-0.138286</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011885</td>\n",
              "      <td>-0.020293</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>2.228926</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9012 rows × 46 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d0f369e-4809-440f-892e-f5f776b8804f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0d0f369e-4809-440f-892e-f5f776b8804f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0d0f369e-4809-440f-892e-f5f776b8804f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-46f23b8a-6a23-44f8-a802-b9c5391b2879\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46f23b8a-6a23-44f8-a802-b9c5391b2879')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-46f23b8a-6a23-44f8-a802-b9c5391b2879 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Komponenty główne\n",
        "components_df = pd.DataFrame(pca_80.components_, columns=data_numeric.columns)\n",
        "print(\"Komponenty główne:\")\n",
        "print(components_df.drop('FLAG', axis=1))  # Wykluczamy kolumnę FLAG\n",
        "\n",
        "# Wpływ zmiennych na komponenty główne\n",
        "top_variables_per_component = {}\n",
        "for idx, component in enumerate(pca_80.components_):\n",
        "    top_variables = [data_numeric.columns[i] for i in component.argsort()[-3:][::-1] if data_numeric.columns[i] != 'FLAG']  # Wykluczamy kolumnę FLAG\n",
        "    top_variables_per_component[f'Komponent {idx+1}'] = top_variables\n",
        "\n",
        "print(\"\\nNajważniejsze zmienne dla każdego komponentu:\")\n",
        "for component, variables in top_variables_per_component.items():\n",
        "    print(f\"{component}: {', '.join(variables)}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AcUc9HjDh-Ft",
        "outputId": "7712b6a9-510d-4980-dd6a-bf3245fee737"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Komponenty główne:\n",
            "    Avg min between sent tnx  Avg min between received tnx  \\\n",
            "0                   0.000135                     -0.016619   \n",
            "1                  -0.001746                     -0.003985   \n",
            "2                   0.002031                      0.000966   \n",
            "3                   0.008353                      0.009101   \n",
            "4                   0.064183                      0.062357   \n",
            "5                  -0.060109                     -0.046862   \n",
            "6                   0.046898                      0.025337   \n",
            "7                  -0.020359                     -0.092347   \n",
            "8                   0.122002                      0.210840   \n",
            "9                   0.167249                      0.253098   \n",
            "10                  0.212536                      0.369562   \n",
            "11                  0.180341                      0.302327   \n",
            "12                  0.513748                     -0.072838   \n",
            "13                  0.210342                     -0.028838   \n",
            "\n",
            "    Time Diff between first and last (Mins)  Sent tnx  Received Tnx  \\\n",
            "0                                  0.137217  0.307414      0.246252   \n",
            "1                                 -0.003490  0.004042      0.002716   \n",
            "2                                  0.013272 -0.014527     -0.002114   \n",
            "3                                  0.047287 -0.039034     -0.025542   \n",
            "4                                  0.150113 -0.076205     -0.303283   \n",
            "5                                 -0.177489  0.274013     -0.236975   \n",
            "6                                  0.031798 -0.084242     -0.206473   \n",
            "7                                 -0.098593 -0.136376     -0.008702   \n",
            "8                                  0.330015  0.092840      0.170739   \n",
            "9                                  0.248752 -0.108394     -0.011997   \n",
            "10                                 0.332015  0.191316     -0.102614   \n",
            "11                                 0.096267 -0.244830     -0.008896   \n",
            "12                                 0.038566  0.022871     -0.007967   \n",
            "13                                 0.048661  0.181742     -0.200522   \n",
            "\n",
            "    Number of Created Contracts  Unique Received From Addresses  \\\n",
            "0                      0.115537                        0.190297   \n",
            "1                      0.002168                        0.002388   \n",
            "2                     -0.013614                        0.015804   \n",
            "3                     -0.019922                       -0.029554   \n",
            "4                      0.009283                       -0.288424   \n",
            "5                      0.240252                       -0.243822   \n",
            "6                     -0.139257                       -0.189492   \n",
            "7                     -0.021062                        0.177947   \n",
            "8                      0.010985                        0.110069   \n",
            "9                     -0.034266                       -0.053748   \n",
            "10                     0.076131                       -0.034050   \n",
            "11                    -0.033405                       -0.003787   \n",
            "12                     0.080019                        0.040211   \n",
            "13                     0.174995                       -0.241596   \n",
            "\n",
            "    Unique Sent To Addresses  min value received  max value received   ...  \\\n",
            "0                   0.244132            0.008445             0.145692  ...   \n",
            "1                   0.003411           -0.000767             0.002057  ...   \n",
            "2                  -0.009212           -0.004517            -0.012419  ...   \n",
            "3                  -0.028933           -0.007845            -0.018868  ...   \n",
            "4                  -0.086762           -0.077805            -0.183503  ...   \n",
            "5                   0.150644            0.032771            -0.169064  ...   \n",
            "6                   0.042066            0.091776             0.171977  ...   \n",
            "7                  -0.129575            0.251039            -0.260591  ...   \n",
            "8                   0.105091           -0.196515            -0.366956  ...   \n",
            "9                  -0.257889           -0.145186            -0.207757  ...   \n",
            "10                  0.215326            0.181973             0.177206  ...   \n",
            "11                 -0.301655           -0.031870             0.256850  ...   \n",
            "12                  0.017634           -0.104305             0.030606  ...   \n",
            "13                  0.187260            0.531409            -0.187943  ...   \n",
            "\n",
            "    ERC20 max val rec  ERC20 avg val rec  ERC20 min val sent  \\\n",
            "0            0.028719           0.026981           -0.006958   \n",
            "1            0.000266           0.000294            0.499845   \n",
            "2           -0.003057          -0.002773            0.000651   \n",
            "3            0.583242           0.552443            0.000169   \n",
            "4           -0.043910          -0.044326           -0.000539   \n",
            "5            0.026959           0.025809           -0.000748   \n",
            "6           -0.024245          -0.027000           -0.000092   \n",
            "7           -0.006092          -0.008482           -0.000670   \n",
            "8           -0.019703          -0.015754            0.002648   \n",
            "9           -0.004235          -0.006889            0.002510   \n",
            "10          -0.003003          -0.004519            0.005105   \n",
            "11           0.001056          -0.004243            0.002404   \n",
            "12          -0.001784           0.003901            0.001272   \n",
            "13           0.002120           0.003167            0.000037   \n",
            "\n",
            "    ERC20 max val sent  ERC20 avg val sent  ERC20 min val sent contract  \\\n",
            "0            -0.006299           -0.006735                          0.0   \n",
            "1             0.499915            0.499905                         -0.0   \n",
            "2             0.000615            0.000649                         -0.0   \n",
            "3             0.000206            0.000182                          0.0   \n",
            "4            -0.000297           -0.000768                          0.0   \n",
            "5            -0.001297           -0.000942                          0.0   \n",
            "6            -0.000008           -0.000224                          0.0   \n",
            "7            -0.000465           -0.000585                          0.0   \n",
            "8             0.003063            0.002908                          0.0   \n",
            "9             0.002472            0.002492                          0.0   \n",
            "10            0.005093            0.005249                          0.0   \n",
            "11            0.001957            0.002357                         -0.0   \n",
            "12           -0.004377           -0.004312                          0.0   \n",
            "13            0.000274            0.000153                         -0.0   \n",
            "\n",
            "    ERC20 max val sent contract  ERC20 avg val sent contract  \\\n",
            "0                           0.0                          0.0   \n",
            "1                          -0.0                         -0.0   \n",
            "2                          -0.0                         -0.0   \n",
            "3                           0.0                          0.0   \n",
            "4                           0.0                          0.0   \n",
            "5                           0.0                          0.0   \n",
            "6                           0.0                          0.0   \n",
            "7                           0.0                          0.0   \n",
            "8                           0.0                          0.0   \n",
            "9                           0.0                          0.0   \n",
            "10                          0.0                          0.0   \n",
            "11                         -0.0                         -0.0   \n",
            "12                          0.0                          0.0   \n",
            "13                         -0.0                         -0.0   \n",
            "\n",
            "    ERC20 uniq sent token name  ERC20 uniq rec token name  \n",
            "0                     0.223691                   0.327129  \n",
            "1                     0.004064                   0.004516  \n",
            "2                    -0.015794                  -0.017455  \n",
            "3                     0.030183                   0.024984  \n",
            "4                     0.350779                   0.284529  \n",
            "5                    -0.260414                  -0.259338  \n",
            "6                     0.150808                   0.194827  \n",
            "7                     0.092482                   0.055831  \n",
            "8                     0.006791                   0.000146  \n",
            "9                     0.027741                  -0.045180  \n",
            "10                   -0.142790                  -0.075972  \n",
            "11                   -0.163009                  -0.075691  \n",
            "12                   -0.042077                  -0.010350  \n",
            "13                    0.061252                   0.030310  \n",
            "\n",
            "[14 rows x 45 columns]\n",
            "\n",
            "Najważniejsze zmienne dla każdego komponentu:\n",
            "Komponent 1: total transactions (including tnx to create contract, ERC20 uniq rec contract addr, ERC20 uniq rec token name\n",
            "Komponent 2: ERC20 max val sent, ERC20 avg val sent, ERC20 min val sent\n",
            "Komponent 3: avg value sent to contract, total ether sent contracts, max val sent to contract\n",
            "Komponent 4: ERC20 max val rec, ERC20 total Ether received, ERC20 avg val rec\n",
            "Komponent 5: ERC20 uniq sent token name, ERC20 uniq rec contract addr, ERC20 uniq rec token name\n",
            "Komponent 6: max val sent, Sent tnx, ERC20 uniq sent addr\n",
            "Komponent 7: total Ether sent, max val sent, avg val received\n",
            "Komponent 8: min val sent, avg val sent, min value received\n",
            "Komponent 9: Time Diff between first and last (Mins), max val sent, Avg min between received tnx\n",
            "Komponent 10: total ether received, total Ether sent, Avg min between received tnx\n",
            "Komponent 11: Avg min between received tnx, Time Diff between first and last (Mins), avg val received\n",
            "Komponent 12: ERC20 total Ether sent contract, ERC20 uniq sent addr.1, Avg min between received tnx\n",
            "Komponent 13: ERC20 min val rec, Avg min between sent tnx\n",
            "Komponent 14: min value received, ERC20 total Ether sent contract, Avg min between sent tnx\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "1DZy4YoGpCkS",
        "outputId": "b01001de-07d8-4670-a77c-075c1e19f347"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      FLAG  Avg min between sent tnx  Avg min between received tnx  \\\n",
              "0        0                    844.26                       1093.71   \n",
              "1        0                  12709.07                       2958.44   \n",
              "2        0                 246194.54                       2434.02   \n",
              "3        0                  10219.60                      15785.09   \n",
              "4        0                     36.61                      10707.77   \n",
              "...    ...                       ...                           ...   \n",
              "9832     1                      0.00                          0.00   \n",
              "9836     1                  12635.10                        631.39   \n",
              "9837     1                      0.00                          0.00   \n",
              "9838     1                   2499.44                       2189.29   \n",
              "9840     1                  37242.70                        149.56   \n",
              "\n",
              "      Time Diff between first and last (Mins)  Sent tnx  Received Tnx  \\\n",
              "0                                    1.416878  0.752165     -0.090503   \n",
              "1                                    2.965941 -0.041091     -0.173044   \n",
              "2                                    0.849497 -0.157486     -0.171006   \n",
              "3                                    0.489941 -0.128388     -0.172025   \n",
              "4                                    0.444433  5.657198     -0.160816   \n",
              "...                                       ...       ...           ...   \n",
              "9832                                -0.709517 -0.160017     -0.181196   \n",
              "9836                                -0.532268 -0.154956     -0.167949   \n",
              "9837                                -0.709517 -0.160017     -0.181196   \n",
              "9838                                 0.079757 -0.075251     -0.137378   \n",
              "9840                                 1.314393 -0.137244     -0.178139   \n",
              "\n",
              "      Number of Created Contracts  Unique Received From Addresses  \\\n",
              "0                       -0.027442                        0.023475   \n",
              "1                       -0.027442                       -0.088739   \n",
              "2                       -0.027442                       -0.072709   \n",
              "3                       -0.027442                       -0.082327   \n",
              "4                       -0.020676                       -0.082327   \n",
              "...                           ...                             ...   \n",
              "9832                    -0.027442                       -0.104770   \n",
              "9836                    -0.027442                       -0.069502   \n",
              "9837                    -0.027442                       -0.104770   \n",
              "9838                    -0.027442                       -0.005380   \n",
              "9840                    -0.027442                       -0.101564   \n",
              "\n",
              "      Unique Sent To Addresses  min value received  ...  ERC20 max val rec  \\\n",
              "0                     0.326144           -0.140651  ...          -0.010464   \n",
              "1                    -0.051268           -0.140651  ...          -0.011887   \n",
              "2                    -0.094816           -0.140315  ...          -0.011887   \n",
              "3                    -0.054897           -0.140651  ...          -0.011886   \n",
              "4                    -0.033123           -0.140651  ...          -0.011879   \n",
              "...                        ...                 ...  ...                ...   \n",
              "9832                 -0.102074           -0.140651  ...          -0.011887   \n",
              "9836                 -0.087558           -0.140639  ...          -0.011887   \n",
              "9837                 -0.102074           -0.140651  ...          -0.011887   \n",
              "9838                  0.057601           -0.140648  ...          -0.011887   \n",
              "9840                 -0.083929           -0.138286  ...          -0.011885   \n",
              "\n",
              "      ERC20 avg val rec  ERC20 min val sent  ERC20 max val sent  \\\n",
              "0             -0.019059           -0.011145            0.003217   \n",
              "1             -0.020299           -0.011143           -0.011049   \n",
              "2             -0.020299           -0.011145           -0.011049   \n",
              "3             -0.020292           -0.011050           -0.011041   \n",
              "4             -0.020276           -0.011145           -0.011011   \n",
              "...                 ...                 ...                 ...   \n",
              "9832          -0.020299           -0.011145           -0.011049   \n",
              "9836          -0.020299           -0.011145           -0.011049   \n",
              "9837          -0.020299           -0.011145           -0.011049   \n",
              "9838          -0.020298           -0.011145           -0.011049   \n",
              "9840          -0.020293           -0.011145           -0.011049   \n",
              "\n",
              "      ERC20 avg val sent  ERC20 min val sent contract  \\\n",
              "0              -0.010223                          0.0   \n",
              "1              -0.010683                          0.0   \n",
              "2              -0.010683                          0.0   \n",
              "3              -0.010677                          0.0   \n",
              "4              -0.010660                          0.0   \n",
              "...                  ...                          ...   \n",
              "9832           -0.010683                          0.0   \n",
              "9836           -0.010683                          0.0   \n",
              "9837           -0.010683                          0.0   \n",
              "9838           -0.010683                          0.0   \n",
              "9840           -0.010683                          0.0   \n",
              "\n",
              "      ERC20 max val sent contract  ERC20 avg val sent contract  \\\n",
              "0                             0.0                          0.0   \n",
              "1                             0.0                          0.0   \n",
              "2                             0.0                          0.0   \n",
              "3                             0.0                          0.0   \n",
              "4                             0.0                          0.0   \n",
              "...                           ...                          ...   \n",
              "9832                          0.0                          0.0   \n",
              "9836                          0.0                          0.0   \n",
              "9837                          0.0                          0.0   \n",
              "9838                          0.0                          0.0   \n",
              "9840                          0.0                          0.0   \n",
              "\n",
              "      ERC20 uniq sent token name  ERC20 uniq rec token name  \n",
              "0                       5.585223                   3.128332  \n",
              "1                      -0.057156                   0.130313  \n",
              "2                      -0.205640                   0.190274  \n",
              "3                      -0.057156                   0.370155  \n",
              "4                       0.685262                   1.329521  \n",
              "...                          ...                        ...  \n",
              "9832                   -0.205640                  -0.169489  \n",
              "9836                   -0.205640                  -0.169489  \n",
              "9837                   -0.205640                  -0.229449  \n",
              "9838                   -0.205640                   0.010393  \n",
              "9840                   -0.205640                   2.228926  \n",
              "\n",
              "[9012 rows x 46 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3262537d-a538-43e8-b183-b49226995cdd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>FLAG</th>\n",
              "      <th>Avg min between sent tnx</th>\n",
              "      <th>Avg min between received tnx</th>\n",
              "      <th>Time Diff between first and last (Mins)</th>\n",
              "      <th>Sent tnx</th>\n",
              "      <th>Received Tnx</th>\n",
              "      <th>Number of Created Contracts</th>\n",
              "      <th>Unique Received From Addresses</th>\n",
              "      <th>Unique Sent To Addresses</th>\n",
              "      <th>min value received</th>\n",
              "      <th>...</th>\n",
              "      <th>ERC20 max val rec</th>\n",
              "      <th>ERC20 avg val rec</th>\n",
              "      <th>ERC20 min val sent</th>\n",
              "      <th>ERC20 max val sent</th>\n",
              "      <th>ERC20 avg val sent</th>\n",
              "      <th>ERC20 min val sent contract</th>\n",
              "      <th>ERC20 max val sent contract</th>\n",
              "      <th>ERC20 avg val sent contract</th>\n",
              "      <th>ERC20 uniq sent token name</th>\n",
              "      <th>ERC20 uniq rec token name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>844.26</td>\n",
              "      <td>1093.71</td>\n",
              "      <td>1.416878</td>\n",
              "      <td>0.752165</td>\n",
              "      <td>-0.090503</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>0.023475</td>\n",
              "      <td>0.326144</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010464</td>\n",
              "      <td>-0.019059</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>0.003217</td>\n",
              "      <td>-0.010223</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.585223</td>\n",
              "      <td>3.128332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>12709.07</td>\n",
              "      <td>2958.44</td>\n",
              "      <td>2.965941</td>\n",
              "      <td>-0.041091</td>\n",
              "      <td>-0.173044</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.088739</td>\n",
              "      <td>-0.051268</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011143</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.057156</td>\n",
              "      <td>0.130313</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>246194.54</td>\n",
              "      <td>2434.02</td>\n",
              "      <td>0.849497</td>\n",
              "      <td>-0.157486</td>\n",
              "      <td>-0.171006</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.072709</td>\n",
              "      <td>-0.094816</td>\n",
              "      <td>-0.140315</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>0.190274</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>10219.60</td>\n",
              "      <td>15785.09</td>\n",
              "      <td>0.489941</td>\n",
              "      <td>-0.128388</td>\n",
              "      <td>-0.172025</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.082327</td>\n",
              "      <td>-0.054897</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011886</td>\n",
              "      <td>-0.020292</td>\n",
              "      <td>-0.011050</td>\n",
              "      <td>-0.011041</td>\n",
              "      <td>-0.010677</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.057156</td>\n",
              "      <td>0.370155</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>36.61</td>\n",
              "      <td>10707.77</td>\n",
              "      <td>0.444433</td>\n",
              "      <td>5.657198</td>\n",
              "      <td>-0.160816</td>\n",
              "      <td>-0.020676</td>\n",
              "      <td>-0.082327</td>\n",
              "      <td>-0.033123</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011879</td>\n",
              "      <td>-0.020276</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011011</td>\n",
              "      <td>-0.010660</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.685262</td>\n",
              "      <td>1.329521</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9832</th>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.709517</td>\n",
              "      <td>-0.160017</td>\n",
              "      <td>-0.181196</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.104770</td>\n",
              "      <td>-0.102074</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>-0.169489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9836</th>\n",
              "      <td>1</td>\n",
              "      <td>12635.10</td>\n",
              "      <td>631.39</td>\n",
              "      <td>-0.532268</td>\n",
              "      <td>-0.154956</td>\n",
              "      <td>-0.167949</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.069502</td>\n",
              "      <td>-0.087558</td>\n",
              "      <td>-0.140639</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>-0.169489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9837</th>\n",
              "      <td>1</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.709517</td>\n",
              "      <td>-0.160017</td>\n",
              "      <td>-0.181196</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.104770</td>\n",
              "      <td>-0.102074</td>\n",
              "      <td>-0.140651</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020299</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>-0.229449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9838</th>\n",
              "      <td>1</td>\n",
              "      <td>2499.44</td>\n",
              "      <td>2189.29</td>\n",
              "      <td>0.079757</td>\n",
              "      <td>-0.075251</td>\n",
              "      <td>-0.137378</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.005380</td>\n",
              "      <td>0.057601</td>\n",
              "      <td>-0.140648</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011887</td>\n",
              "      <td>-0.020298</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>0.010393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9840</th>\n",
              "      <td>1</td>\n",
              "      <td>37242.70</td>\n",
              "      <td>149.56</td>\n",
              "      <td>1.314393</td>\n",
              "      <td>-0.137244</td>\n",
              "      <td>-0.178139</td>\n",
              "      <td>-0.027442</td>\n",
              "      <td>-0.101564</td>\n",
              "      <td>-0.083929</td>\n",
              "      <td>-0.138286</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.011885</td>\n",
              "      <td>-0.020293</td>\n",
              "      <td>-0.011145</td>\n",
              "      <td>-0.011049</td>\n",
              "      <td>-0.010683</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.205640</td>\n",
              "      <td>2.228926</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>9012 rows × 46 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3262537d-a538-43e8-b183-b49226995cdd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3262537d-a538-43e8-b183-b49226995cdd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3262537d-a538-43e8-b183-b49226995cdd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5e67d095-bcc9-4878-9bd6-04e42db6d5d9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e67d095-bcc9-4878-9bd6-04e42db6d5d9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5e67d095-bcc9-4878-9bd6-04e42db6d5d9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Inicjalizacja obiektu StandardScaler\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Dopasowanie scaler do danych i przekształcenie ich\n",
        "data_scaled = scaler.fit_transform(data_pca_80)\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "# Utworzenie obiektu PCA z 14 komponentami\n",
        "pca_final = PCA(n_components=14)\n",
        "\n",
        "# Dopasowanie modelu do przeskalowanych danych\n",
        "pca_final.fit(data_scaled)\n",
        "\n",
        "# Przekształcenie danych przy użyciu PCA\n",
        "data_final = pca_final.transform(data_scaled)\n",
        "data_final"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "shtuO3gAqq56",
        "outputId": "2ec685d3-49f6-401e-e7d5-8f807cd567dd"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 4.77734161e-01, -1.33348014e+00,  1.67263770e-02, ...,\n",
              "        -6.81107940e-01, -8.69301900e-01, -8.97369408e-01],\n",
              "       [-6.05807382e-01, -5.02533921e-01, -2.03779331e-03, ...,\n",
              "         1.84606574e-01,  7.17393809e-01, -2.63606403e-01],\n",
              "       [ 2.79430031e-01, -1.07357570e+00,  5.33538387e-03, ...,\n",
              "        -1.07358214e+00,  6.18014445e+00,  1.39927012e+00],\n",
              "       ...,\n",
              "       [ 1.10264675e+00,  1.25878941e-01,  8.60550807e-03, ...,\n",
              "        -6.45269335e-01, -1.99542613e-01,  4.08652992e-01],\n",
              "       [ 9.34159825e-01, -9.49873065e-03,  9.80534103e-03, ...,\n",
              "        -6.77282526e-01,  3.76963469e-02,  2.84178426e-01],\n",
              "       [ 3.28130169e-01,  1.53351229e-01, -6.77681764e-03, ...,\n",
              "        -6.73174033e-02,  1.64145188e+00,  7.13764034e-01]])"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Podział danych na zbiór treningowy i testowy\n",
        "X_train, X_test, y_train, y_test = train_test_split(data_pca_80, data['FLAG'], test_size=0.2, random_state=42)\n",
        "\n",
        "# Sprawdzenie rozmiarów zbiorów treningowego i testowego\n",
        "print(\"Rozmiar zbioru treningowego:\", X_train.shape[0])\n",
        "print(\"Rozmiar zbioru testowego:\", X_test.shape[0])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bQwpqCP2yJSf",
        "outputId": "0ca1c3f6-5d6c-4f23-b1e0-51c5bb7d17d2"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rozmiar zbioru treningowego: 7209\n",
            "Rozmiar zbioru testowego: 1803\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "# Inicjalizacja modelu\n",
        "logistic_regression = LogisticRegression()\n",
        "\n",
        "# Trenowanie modelu na danych treningowych\n",
        "logistic_regression.fit(X_train, y_train)\n",
        "\n",
        "# Ocena dokładności modelu na danych testowych\n",
        "accuracy_lr = logistic_regression.score(X_test, y_test)\n",
        "print(\"Dokładność regresji logistycznej na danych testowych:\", accuracy_lr)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X380O2zMy1ji",
        "outputId": "4965ce16-d99c-46db-c3fc-886c1e4f158a"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dokładność regresji logistycznej na danych testowych: 0.9950083194675541\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Xza3kXpX-Cjj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Inicjalizacja obiektu StandardScaler\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Przeskalowanie danych treningowych\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "# Przeskalowanie danych testowych (bez dopasowywania ponownie scaler'a)\n",
        "X_test_scaled = scaler.transform(X_test)\n"
      ],
      "metadata": {
        "id": "bVLVuJU8zPel"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Wybierz cechy (X)\n",
        "X = data.drop('FLAG', axis=1)  # Usuń zmienną docelową 'FLAG'\n",
        "\n",
        "# Wybierz zmienną docelową (y)\n",
        "y = data['FLAG']\n"
      ],
      "metadata": {
        "id": "GYo35F4rzs-V"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Podział danych na zbiór treningowy i testowy\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"
      ],
      "metadata": {
        "id": "yrpEeaBuzvre"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Wybierz cechy (X)\n",
        "X = data.drop('FLAG', axis=1)  # Usuń zmienną docelową 'FLAG'\n",
        "\n",
        "# Wybierz zmienną docelową (y)\n",
        "y = data['FLAG']\n",
        "\n",
        "# Podział danych na zbiór treningowy i testowy\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Inicjalizacja obiektu StandardScaler\n",
        "scaler = StandardScaler()\n",
        "\n",
        "# Dopasowanie skalera do danych treningowych i przekształcenie ich\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "\n",
        "# Przekształcenie danych testowych przy użyciu wcześniej dopasowanego skalera\n",
        "X_test_scaled = scaler.transform(X_test)\n"
      ],
      "metadata": {
        "id": "jyN1MQUDz1zQ"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.svm import SVC\n",
        "\n",
        "# Inicjalizacja modelu SVM\n",
        "svm_model = SVC(kernel='linear', random_state=42)\n",
        "\n",
        "# Dopasowanie modelu do danych treningowych\n",
        "svm_model.fit(X_train_scaled, y_train)\n",
        "\n",
        "# Ocena dokładności modelu na danych testowych\n",
        "accuracy = svm_model.score(X_test_scaled, y_test)\n",
        "print(\"Dokładność modelu SVM na danych testowych:\", accuracy)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m2ryu1Rv5ICN",
        "outputId": "e7df2028-962d-4b6a-afc9-4fb26090969b"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dokładność modelu SVM na danych testowych: 0.8663338879645036\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "\n",
        "# Inicjalizacja modelu KNN\n",
        "knn_model = KNeighborsClassifier()\n",
        "\n",
        "# Dopasowanie modelu do danych treningowych\n",
        "knn_model.fit(X_train_scaled, y_train)\n",
        "\n",
        "# Dokładność modelu na danych testowych\n",
        "accuracy_knn = knn_model.score(X_test_scaled, y_test)\n",
        "print(\"Dokładność modelu KNN na danych testowych:\", accuracy_knn)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6SPLdK2F5869",
        "outputId": "ba36b781-bd96-4182-ca2c-21b93cf7e605"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dokładność modelu KNN na danych testowych: 0.9622850804215197\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Regresja logistyczna osiągnęła najwyższą dokładność na zbiorze testowym, wynoszącą około 99.50%. Jest to bardzo wysoki wynik, sugerujący, że model dobrze radzi sobie z klasyfikacją oszustw."
      ],
      "metadata": {
        "id": "T9DZnODL_x9T"
      }
    }
  ]
}